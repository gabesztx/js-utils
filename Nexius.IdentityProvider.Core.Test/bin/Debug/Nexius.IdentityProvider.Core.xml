<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Nexius.IdentityProvider.Core</name>
    </assembly>
    <members>
        <member name="M:Nexius.IdentityProvider.Core.Areas.HelpPage.ApiDescriptionExtensions.GetFriendlyId(System.Web.Http.Description.ApiDescription)">
            <summary>
            Generates an URI-friendly ID for the <see cref="T:System.Web.Http.Description.ApiDescription"/>. E.g. "Get-Values-id_name" instead of "GetValues/{id}?name={name}"
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="T:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageConfig">
            <summary>
            Use this class to customize the Help Page.
            For example you can set a custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> to supply the documentation
            or you can provide the samples for the requests/responses.
            </summary>
        </member>
        <member name="T:Nexius.IdentityProvider.Core.Areas.HelpPage.Controllers.HelpController">
            <summary>
            The controller that will handle requests for the help page.
            </summary>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageConfigurationExtensions.SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)">
            <summary>
            Sets the documentation provider for help page.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="documentationProvider">The documentation provider.</param>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleObjects(System.Web.Http.HttpConfiguration,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Sets the objects that will be used by the formatters to produce sample requests/responses.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleObjects">The sample objects.</param>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type and action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample request directly for the specified media type and action with parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type of the action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample response directly for the specified media type of the action with specific parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForMediaType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Sets the sample directly for all actions with the specified media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Sets the sample directly for all actions with the specified type and media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
            <param name="type">The parameter type or return type of an action.</param>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <returns>The help page sample generator.</returns>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageConfigurationExtensions.SetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration,Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageSampleGenerator)">
            <summary>
            Sets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleGenerator">The help page sample generator.</param>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageConfigurationExtensions.GetModelDescriptionGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the model description generator.
            </summary>
            <param name="config">The configuration.</param>
            <returns>The <see cref="T:Nexius.IdentityProvider.Core.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator"/></returns>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageApiModel(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="apiDescriptionId">The <see cref="T:System.Web.Http.Description.ApiDescription"/> ID.</param>
            <returns>
            An <see cref="T:Nexius.IdentityProvider.Core.Areas.HelpPage.Models.HelpPageApiModel"/>
            </returns>
        </member>
        <member name="T:Nexius.IdentityProvider.Core.Areas.HelpPage.ModelDescriptions.ModelDescription">
            <summary>
            Describes a type model.
            </summary>
        </member>
        <member name="T:Nexius.IdentityProvider.Core.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator">
            <summary>
            Generates model descriptions for given types.
            </summary>
        </member>
        <member name="T:Nexius.IdentityProvider.Core.Areas.HelpPage.ModelDescriptions.ModelNameAttribute">
            <summary>
            Use this attribute to change the name of the <see cref="T:Nexius.IdentityProvider.Core.Areas.HelpPage.ModelDescriptions.ModelDescription"/> generated for a type.
            </summary>
        </member>
        <member name="T:Nexius.IdentityProvider.Core.Areas.HelpPage.Models.HelpPageApiModel">
            <summary>
            The model that represents an API displayed on the help page.
            </summary>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Areas.HelpPage.Models.HelpPageApiModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Nexius.IdentityProvider.Core.Areas.HelpPage.Models.HelpPageApiModel"/> class.
            </summary>
        </member>
        <member name="P:Nexius.IdentityProvider.Core.Areas.HelpPage.Models.HelpPageApiModel.RequiresAuthorization">
            <summary>
            Requires authenticationfor the request
            </summary>
        </member>
        <member name="P:Nexius.IdentityProvider.Core.Areas.HelpPage.Models.HelpPageApiModel.ResponseCodes">
            <summary>
            Possible response status codes
            </summary>
        </member>
        <member name="P:Nexius.IdentityProvider.Core.Areas.HelpPage.Models.HelpPageApiModel.OverridedUriProperties">
            <summary>
            Overrided uri paramters
            </summary>
        </member>
        <member name="P:Nexius.IdentityProvider.Core.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription">
            <summary>
            Gets or sets the <see cref="P:Nexius.IdentityProvider.Core.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription"/> that describes the API.
            </summary>
        </member>
        <member name="P:Nexius.IdentityProvider.Core.Areas.HelpPage.Models.HelpPageApiModel.UriParameters">
            <summary>
            Gets or sets the <see cref="T:Nexius.IdentityProvider.Core.Areas.HelpPage.ModelDescriptions.ParameterDescription"/> collection that describes the URI parameters for the API.
            </summary>
        </member>
        <member name="P:Nexius.IdentityProvider.Core.Areas.HelpPage.Models.HelpPageApiModel.RequestDocumentation">
            <summary>
            Gets or sets the documentation for the request.
            </summary>
        </member>
        <member name="P:Nexius.IdentityProvider.Core.Areas.HelpPage.Models.HelpPageApiModel.RequestModelDescription">
            <summary>
            Gets or sets the <see cref="T:Nexius.IdentityProvider.Core.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the request body.
            </summary>
        </member>
        <member name="P:Nexius.IdentityProvider.Core.Areas.HelpPage.Models.HelpPageApiModel.RequestBodyParameters">
            <summary>
            Gets the request body parameter descriptions.
            </summary>
        </member>
        <member name="P:Nexius.IdentityProvider.Core.Areas.HelpPage.Models.HelpPageApiModel.ResourceDescription">
            <summary>
            Gets or sets the <see cref="T:Nexius.IdentityProvider.Core.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the resource.
            </summary>
        </member>
        <member name="P:Nexius.IdentityProvider.Core.Areas.HelpPage.Models.HelpPageApiModel.ResourceProperties">
            <summary>
            Gets the resource property descriptions.
            </summary>
        </member>
        <member name="P:Nexius.IdentityProvider.Core.Areas.HelpPage.Models.HelpPageApiModel.SampleRequests">
            <summary>
            Gets the sample requests associated with the API.
            </summary>
        </member>
        <member name="P:Nexius.IdentityProvider.Core.Areas.HelpPage.Models.HelpPageApiModel.SampleResponses">
            <summary>
            Gets the sample responses associated with the API.
            </summary>
        </member>
        <member name="P:Nexius.IdentityProvider.Core.Areas.HelpPage.Models.HelpPageApiModel.ErrorMessages">
            <summary>
            Gets the error messages associated with this model.
            </summary>
        </member>
        <member name="T:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageSampleGenerator">
            <summary>
            This class will generate the samples for the help page.
            </summary>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageSampleGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageSampleGenerator"/> class.
            </summary>
        </member>
        <member name="P:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageSampleGenerator.ActualHttpMessageTypes">
            <summary>
            Gets CLR types that are used as the content of <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="P:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples">
            <summary>
            Gets the objects that are used directly as samples for certain actions.
            </summary>
        </member>
        <member name="P:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects">
            <summary>
            Gets the objects that are serialized as samples by the supported formatters.
            </summary>
        </member>
        <member name="P:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories">
            <summary>
            Gets factories for the objects that the supported formatters will serialize as samples. Processed in order,
            stopping when the factory successfully returns a non-<see langref="null"/> object.
            </summary>
            <remarks>
            Collection includes just <see cref="M:Nexius.IdentityProvider.Core.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)"/> initially. Use
            <code>SampleObjectFactories.Insert(0, func)</code> to provide an override and
            <code>SampleObjectFactories.Add(func)</code> to provide a fallback.</remarks>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageSampleGenerator.GetSampleRequests(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the request body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageSampleGenerator.GetSampleResponses(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the response body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageSampleGenerator.GetSample(System.Web.Http.Description.ApiDescription,Nexius.IdentityProvider.Core.Areas.HelpPage.SampleDirection)">
            <summary>
            Gets the request or response body samples.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageSampleGenerator.GetActionSample(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,Nexius.IdentityProvider.Core.Areas.HelpPage.SampleDirection)">
            <summary>
            Search for samples that are provided directly through <see cref="P:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples"/>.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="type">The CLR type.</param>
            <param name="formatter">The formatter.</param>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The sample that matches the parameters.</returns>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageSampleGenerator.GetSampleObject(System.Type)">
            <summary>
            Gets the sample object that will be serialized by the formatters. 
            First, it will look at the <see cref="P:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects"/>. If no sample object is found, it will try to create
            one using <see cref="M:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageSampleGenerator.DefaultSampleObjectFactory(Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageSampleGenerator,System.Type)"/> (which wraps an <see cref="T:Nexius.IdentityProvider.Core.Areas.HelpPage.ObjectGenerator"/>) and other
            factories in <see cref="P:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The sample object.</returns>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageSampleGenerator.ResolveHttpRequestMessageType(System.Web.Http.Description.ApiDescription)">
            <summary>
            Resolves the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The type.</returns>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageSampleGenerator.ResolveType(System.Web.Http.Description.ApiDescription,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Nexius.IdentityProvider.Core.Areas.HelpPage.SampleDirection,System.Collections.ObjectModel.Collection{System.Net.Http.Formatting.MediaTypeFormatter}@)">
            <summary>
            Resolves the type of the action parameter or return value when <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/> is used.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or a response.</param>
            <param name="formatters">The formatters.</param>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageSampleGenerator.WriteSampleObjectUsingFormatter(System.Net.Http.Formatting.MediaTypeFormatter,System.Object,System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Writes the sample object using formatter.
            </summary>
            <param name="formatter">The formatter.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="T:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageSampleKey">
            <summary>
            This is used to identify the place where the sample should be applied.
            </summary>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a new <see cref="T:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageSampleKey"/> based on media type.
            </summary>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Creates a new <see cref="T:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageSampleKey"/> based on media type and CLR type.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="type">The CLR type.</param>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageSampleKey.#ctor(Nexius.IdentityProvider.Core.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageSampleKey"/> based on <see cref="P:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="sampleDirection">The <see cref="P:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,Nexius.IdentityProvider.Core.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageSampleKey"/> based on media type, <see cref="P:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The <see cref="P:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="P:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageSampleKey.ControllerName">
            <summary>
            Gets the name of the controller.
            </summary>
            <value>
            The name of the controller.
            </value>
        </member>
        <member name="P:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageSampleKey.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
            <value>
            The name of the action.
            </value>
        </member>
        <member name="P:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageSampleKey.MediaType">
            <summary>
            Gets the media type.
            </summary>
            <value>
            The media type.
            </value>
        </member>
        <member name="P:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageSampleKey.ParameterNames">
            <summary>
            Gets the parameter names.
            </summary>
        </member>
        <member name="P:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageSampleKey.SampleDirection">
            <summary>
            Gets the <see cref="P:Nexius.IdentityProvider.Core.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.
            </summary>
        </member>
        <member name="T:Nexius.IdentityProvider.Core.Areas.HelpPage.ImageSample">
            <summary>
            This represents an image sample on the help page. There's a display template named ImageSample associated with this class.
            </summary>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Areas.HelpPage.ImageSample.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Nexius.IdentityProvider.Core.Areas.HelpPage.ImageSample"/> class.
            </summary>
            <param name="src">The URL of an image.</param>
        </member>
        <member name="T:Nexius.IdentityProvider.Core.Areas.HelpPage.InvalidSample">
            <summary>
            This represents an invalid sample on the help page. There's a display template named InvalidSample associated with this class.
            </summary>
        </member>
        <member name="T:Nexius.IdentityProvider.Core.Areas.HelpPage.ObjectGenerator">
            <summary>
            This class will create an object of a given type and populate it with sample data.
            </summary>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)">
            <summary>
            Generates an object for a given type. The type needs to be public, have a public default constructor and settable public properties/fields. Currently it supports the following types:
            Simple types: <see cref="T:System.Int32"/>, <see cref="T:System.String"/>, <see cref="N:Nexius.IdentityProvider.Core.Enum"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Uri"/>, etc.
            Complex types: POCO types.
            Nullables: <see cref="T:System.Nullable`1"/>.
            Arrays: arrays of simple types or complex types.
            Key value pairs: <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            Tuples: <see cref="T:System.Tuple`1"/>, <see cref="T:System.Tuple`2"/>, etc
            Dictionaries: <see cref="T:System.Collections.Generic.IDictionary`2"/> or anything deriving from <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            Collections: <see cref="T:System.Collections.Generic.IList`1"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.ICollection`1"/>, <see cref="T:System.Collections.IList"/>, <see cref="T:System.Collections.IEnumerable"/>, <see cref="T:System.Collections.ICollection"/> or anything deriving from <see cref="T:System.Collections.Generic.ICollection`1"/> or <see cref="T:System.Collections.IList"/>.
            Queryables: <see cref="T:System.Linq.IQueryable"/>, <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="T:Nexius.IdentityProvider.Core.Areas.HelpPage.SampleDirection">
            <summary>
            Indicates whether the sample is used for request or response
            </summary>
        </member>
        <member name="T:Nexius.IdentityProvider.Core.Areas.HelpPage.TextSample">
            <summary>
            This represents a preformatted text sample on the help page. There's a display template named TextSample associated with this class.
            </summary>
        </member>
        <member name="T:Nexius.IdentityProvider.Core.Areas.HelpPage.XmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file.
            </summary>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Areas.HelpPage.XmlDocumentationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Nexius.IdentityProvider.Core.Areas.HelpPage.XmlDocumentationProvider"/> class.
            </summary>
            <param name="documentPath">The physical path to XML document.</param>
        </member>
        <member name="T:Nexius.IdentityProvider.Core.Controllers.UserRoleController">
            <summary>
            Users
            </summary>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Controllers.UserRoleController.Put(System.Guid,Nexius.IdentityProvider.Model.Enum.SystemRole)">
            <summary>
            Updates an invidual user role.
            </summary>
            <param name="id">The user id</param>
            /// <param name="role">The new role of the user</param>
            <returns>Success: HttpStatusCode.OK(200), Exception/Error: HttpStatusCode.BadRequest(400)</returns>
        </member>
        <member name="T:Nexius.IdentityProvider.Core.Controllers.PrivacyStatementController">
            <summary>
            Users
            </summary>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Controllers.PrivacyStatementController.Get(System.Guid)">
            <summary>
            Returns a PrivacyStatement detail.  
            </summary>
            <returns>The user collection datas.</returns>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Controllers.PrivacyStatementController.Get">
            <summary>
            Returns the PrivacyStatement collection.  
            </summary>
            <returns>The user collection datas.</returns>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Controllers.PrivacyStatementController.Put(Nexius.IdentityProvider.Model.WebApi.Detail.PrivacyStatementDetailModel)">
            <summary>
            Returns the HttpStatusCode.  
            </summary>
            <returns>The user collection data.</returns>
        </member>
        <member name="T:Nexius.IdentityProvider.Core.Controllers.ApplicationContextsController">
            <summary>
            ApplicationUsers
            </summary>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Controllers.ApplicationContextsController.Get(Nexius.IdentityProvider.Model.WebApi.SearchModel)">
            <summary>
            Returns the application context collection.  Parameters example: page=1&amp;start=0&amp;limit=5&amp;sort=emails&amp;dir=DESC&amp;filter=[{"value":"aaa","property":"emails"}]
            </summary>
            <param name="model">The filtering, ordering, grouping and paging informations.</param>
            <returns>The application context collection datas.</returns>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Controllers.ApplicationContextsController.Get(System.Guid)">
            <summary>
            Get an invidual application context.
            </summary>
            <param name="id">The application context identifier.</param>
            <returns>The application context datas.</returns>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Controllers.ApplicationContextsController.Post(Nexius.IdentityProvider.Model.WebApi.ApplicationContextModel)">
            <summary>
            Creates an application context.
            </summary>
            <param name="applicationContextModel">The application context model.</param>
            <returns>If application context creation success, then is return the identier, or else return the error model. 
            The error model contains the field identier(eg: Email, Password, Name) and the error message(eg: Field is required!). 
            The error model return HttpStatusCode.BadRequest(400)
            </returns>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Controllers.ApplicationContextsController.Put(Nexius.IdentityProvider.Model.WebApi.ApplicationContextModel)">
            <summary>
            Updates an application context informations.
            </summary>
            <param name="applicationContextModel">The application context model</param>
            <returns>Success: HttpStatusCode.OK(200), Exception/Error: HttpStatusCode.BadRequest(400)</returns>
        </member>
        <member name="T:Nexius.IdentityProvider.Core.Controllers.ApplicationUsersController">
            <summary>
            ApplicationUsers
            </summary>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Controllers.ApplicationUsersController.Get(Nexius.IdentityProvider.Model.WebApi.SearchModel)">
            <summary>
            Returns the applicationuser collection.  Parameters example: page=1&amp;start=0&amp;limit=5&amp;sort=emails&amp;dir=DESC&amp;filter=[{"value":"aaa","property":"emails"}]
            </summary>
            <param name="model">The filtering, ordering, grouping and paging informations.</param>
            <returns>The applicationuser collection datas.</returns>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Controllers.ApplicationUsersController.Get(System.Guid)">
            <summary>
            Get an invidual applicationuser.
            </summary>
            <param name="id">The applicationuser identifier.</param>
            <returns>The applicationuser datas.</returns>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Controllers.ConfigurationController.Data(System.Int64)">
            <summary>
            Get javascript settings file
            </summary>
            <param name="v">version, and skip the cache</param>
            <returns></returns>
        </member>
        <member name="T:Nexius.IdentityProvider.Core.Controllers.ApplicationTokenController">
            <summary>
            Application token
            </summary>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Controllers.ApplicationTokenController.Get(System.String,System.String,System.String)">
            <summary>
            Authenticate application with own credentials datas.
            </summary>
            <param name="uri">Appplication url</param>
            <param name="secret">Application secret</param>
            <param name="realm">Application realm</param>
            <returns>Application specific token</returns>
        </member>
        <member name="T:Nexius.IdentityProvider.Core.Controllers.ApplicationsController">
            <summary>
            Applications
            </summary>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Controllers.ApplicationsController.Delete(System.Guid)">
            <summary>
            Delete an invidual application.
            </summary>
            <param name="id">The application identifier.</param>
            <returns>Success: HttpStatusCode.OK(200), Exception/Error: HttpStatusCode.NotFound(404)</returns>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Controllers.ApplicationsController.Get(Nexius.IdentityProvider.Model.WebApi.SearchModel)">
            <summary>
            Returns the application collection.  Parameters example: page=1&amp;start=0&amp;limit=5&amp;sort=emails&amp;dir=DESC&amp;filter=[{"value":"aaa","property":"emails"}]
            </summary>
            <param name="model">The filtering, ordering, grouping and paging informations.</param>
            <returns>The application collection datas.</returns>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Controllers.ApplicationsController.Get(System.Guid)">
            <summary>
            Get an invidual application.
            </summary>
            <param name="id">The application identifier.</param>
            <returns>The application datas.</returns>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Controllers.ApplicationsController.Post(Nexius.IdentityProvider.Model.WebApi.ApplicationModel)">
            <summary>
            Creates an application.
            </summary>
            <param name="applicationModel">The application model.</param>
            <returns>If application creation success, then is return the identier, or else return the error model. 
            The error model contains the field identier(eg: Email, Password, Name) and the error message(eg: Field is required!). 
            The error model return HttpStatusCode.BadRequest(400)
            </returns>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Controllers.ApplicationsController.Put(Nexius.IdentityProvider.Model.WebApi.ApplicationModel)">
            <summary>
            Updates an application informations.
            </summary>
            <param name="applicationModel">The application model</param>
            <returns>Success: HttpStatusCode.OK(200), Exception/Error: HttpStatusCode.BadRequest(400)</returns>
        </member>
        <member name="T:Nexius.IdentityProvider.Core.Controllers.ConfirmationEmailResenderController">
            <summary>
            Confirmation email resender
            </summary>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Controllers.ConfirmationEmailResenderController.Post(System.Guid)">
            <summary>
            Resends the confirmation e-mail to a login address
            </summary>
            <param name="id">The id of the login.</param>
            <returns>Returns the status of the process (ok/bad request)
            </returns>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Controllers.PreferencesController.Get">
            <summary>
            Felhasználó beállításai
            </summary>
            <returns>Felhasználó beállításai</returns>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Controllers.PreferencesController.Post">
            <summary>
            Kiválasztott kurzus híreinek lekérdezése
            </summary>
            <param name="id">Kurzus azonosító</param>
            <param name="model">elemek közti lapozás és szűrés</param>
        </member>
        <member name="T:Nexius.IdentityProvider.Core.Controllers.UserTokenController">
            <summary>
            User token
            </summary>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Controllers.UserTokenController.Get(System.String)">
            <summary>
            Get active user token
            </summary>
            <param name="realm">Current application realm</param>
            <returns>User token</returns>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Controllers.LTIController.UpdateLtiDate(Nexius.IdentityProvider.DataAccess.Model.ApplicationUser,System.String,System.String,System.DateTime)">
            <summary>
            Felhasználó adatok befrissitése(pl: utolsó LTI belépés ideje)
            </summary>
            <param name="fullName">LTI rendszerben tárolt felhasználó teljes neve</param>
            <param name="contactEmail">LTI rendszerben tárolt alapértelmezett email címe</param>
            <param name="externalUserId">LTI rendszerben tárolt felhasználó egyedi azonosítója</param>
            <param name="applicationId">Alkalmazás azonosító amin keresztül érkezett a felhasználó</param>
            <param name="ltiTimeStamp">Mikor történt az LTI üzenet kiállítása</param>
            <param name="appUser">ApplicationUser entitás, hogy ne kelljen lekérdezni adatbázisból</param>
            <returns>hiba üzenet</returns>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Controllers.LTIController.CreateLaunchRequest(Nexius.IdentityProvider.Core.Models.LtiLaunchModel,System.Collections.Specialized.NameValueCollection,System.Net.Http.HttpMethod)">
            <summary>
            LTI futattatási url létrehozása
            </summary>
            <param name="model">a bejövő model(formdata, vagy querystring)</param>
            <param name="parameters">a bejövő adatok az aláírás validáció miatt kell külön(formdata, vagy querystring)</param>
            <param name="method">milyen típusu az üzenet küldése(GET, POST)</param>
            <returns>visszatérési üzenet</returns>
        </member>
        <member name="T:Nexius.IdentityProvider.Core.Controllers.OrganizationCategoriesController">
            <summary>
            Organization categories
            </summary>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Controllers.OrganizationCategoriesController.Get">
            <summary>
            Returns the organization category and type collection.
            </summary>
            <returns>The organization categories and types.</returns>
        </member>
        <member name="T:Nexius.IdentityProvider.Core.Controllers.UsersController">
            <summary>
            Users
            </summary>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Controllers.UsersController.Delete(System.Guid)">
            <summary>
            Delete an invidual user.
            </summary>
            <param name="id">The user identifier.</param>
            <returns>Success: HttpStatusCode.OK(200), Exception/Error: HttpStatusCode.NotFound(404)</returns>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Controllers.UsersController.Get(Nexius.IdentityProvider.Model.WebApi.SearchModel)">
            <summary>
            Returns the user collection.  Parameters example: page=1&amp;start=0&amp;limit=5&amp;sort=emails&amp;dir=DESC&amp;filter=[{"value":"aaa","property":"emails"}]
            </summary>
            <param name="model">The filtering, ordering, grouping and paging informations.</param>
            <returns>The user collection datas.</returns>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Controllers.UsersController.Get(System.Guid)">
            <summary>
            Get an invidual user.
            </summary>
            <param name="id">The user identifier.</param>
            <returns>The user datas.</returns>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Controllers.UsersController.Post(Nexius.IdentityProvider.Model.WebApi.UserModel)">
            <summary>
            Creates an invidual user.
            </summary>
            <param name="userModel">The user model.</param>
            <returns>If user creation success, then is return the user identier, or else return the error model. 
            The error model contains the field identier(eg: Email, Password, Name) and the error message(eg: Field is required!). 
            The error model return HttpStatusCode.BadRequest(400)
            </returns>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Controllers.UsersController.Put(Nexius.IdentityProvider.Model.WebApi.UserModel)">
            <summary>
            Updates an invidual user informations.
            </summary>
            <param name="userModel">The user model, required the primary email address!</param>
            <returns>Success: HttpStatusCode.OK(200), Exception/Error: HttpStatusCode.BadRequest(400)</returns>
        </member>
        <member name="T:Nexius.IdentityProvider.Core.Helpers.Controller.AccountControllerHelper">
            <summary>
            Kisegítő funkciók az account controllerhez
            TODO: Innen akár majd mehetnek mappolásba is a dolgok
            </summary>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Helpers.Controller.AccountControllerHelper.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal)">
            <summary>
            Security token létrehozása claims-k alapján
            </summary>
            <param name="principal">claims principal</param>
            <returns>security token</returns>
        </member>
        <member name="P:Nexius.IdentityProvider.Core.Helpers.LtiControllerHelper.MethodNameRequestResults">
            <summary>
            Eredmény lekérdezés metodus neve 
            </summary>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Helpers.LtiControllerHelper.Validation(Nexius.IdentityProvider.Core.Models.LtiLaunchModel)">
            <summary>
            validate LTI message
            </summary>
            <param name="model">lti message model</param>
            <returns>Is valid?</returns>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Helpers.LtiControllerHelper.MapTo(System.Collections.Specialized.NameValueCollection)">
            <summary>
            NameValueCollection átalakítása LtiLaunchModel-é
            </summary>
            <param name="from">query parameters vagy post form data</param>
            <returns>LTI inidítási model</returns>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Helpers.LtiControllerHelper.ValidateTimeStamp(System.DateTime)">
            <summary>
            Oauth üzenet feladás idejének ellenőrzése
            </summary>
            <param name="ltiTimeStamp">oatuh üzenet timestamp</param>
            <returns>visszatérési üzenet, ha üres akkor OK</returns>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Helpers.LtiControllerHelper.CreateToken(Nexius.IdentityProvider.Service.Interface.ISecurityService,Nexius.IdentityProvider.DataAccess.Model.User,Nexius.IdentityProvider.Model.Helpers.ContextClaimModel)">
            <summary>
            Felhasználóra vonatkozó aláírt token létrehozása
            </summary>
            <param name="securityService">security service</param>
            <param name="user">user adatai</param>
            <param name="contextClaim">felhasználó kontexusa</param>
            <returns>aláírt token</returns>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Helpers.LtiControllerHelper.ValidateSignedUrl(Nexius.IdentityProvider.Core.Models.LtiLaunchModel,System.Collections.Specialized.NameValueCollection,System.Net.Http.HttpMethod,System.String)">
            <summary>
            Request validálása
            </summary>
            <param name="model">a bejövő model(formdata, vagy querystring)</param>
            <param name="parameters">a bejövő adatok az aláírás validáció miatt kell külön(formdata, vagy querystring)</param>
            <param name="method">milyen típusu az üzenet küldése(GET, POST)</param>
            <param name="secret">milyen aláírással ellenőrizze a hitelességet</param>
            <returns>visszatérési üzenet, ha üres akkor OK</returns>
        </member>
        <member name="M:Nexius.IdentityProvider.Core.Helpers.LtiControllerHelper.ValidateSignedUrl(System.String,System.Collections.Specialized.NameValueCollection,System.Net.Http.HttpMethod,System.String)">
            <summary>
            Request validálása
            </summary>
            <param name="model">a bejövő model(formdata, vagy querystring)</param>
            <param name="parameters">a bejövő adatok az aláírás validáció miatt kell külön(formdata, vagy querystring)</param>
            <param name="method">milyen típusu az üzenet küldése(GET, POST)</param>
            <param name="secret">milyen aláírással ellenőrizze a hitelességet</param>
            <returns>visszatérési üzenet, ha üres akkor OK</returns>
        </member>
        <member name="P:Nexius.IdentityProvider.Core.Models.LtiLaunchModel.custom_nx_registrar_id">
            <summary>
            Registrar organization Id
            </summary>
        </member>
        <member name="P:Nexius.IdentityProvider.Core.Models.LtiLaunchModel.origin">
            <summary>
            Request origin for the redirect
            </summary>
        </member>
        <member name="P:Nexius.IdentityProvider.Core.Models.RegisterModel.OrganizationName">
            <summary>
            A kiválasztott szervezet neve(csak olvasható)
            </summary>
        </member>
        <member name="P:Nexius.IdentityProvider.Core.Resources.AdminResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Nexius.IdentityProvider.Core.Resources.AdminResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Nexius.IdentityProvider.Core.Resources.CommonResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Nexius.IdentityProvider.Core.Resources.CommonResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
    </members>
</doc>
